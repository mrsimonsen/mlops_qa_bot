name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests with Pytest
        run: |
          pytest

      - name: Build Docker Image
        run: |
          docker build -t mlops-qa-bot .

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci # This job depends on the ci job completing successfully
    if: github.ref == 'refs/heads/main' #only run when pushed to main branch

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # --- Commented out CD steps ---
      # The following steps are a template for future deployment.
      # They are commented out to avoid actual deployment and resource costs.
      # Don't forget to add AWS credentials as secrets in your GitHub repository settings.

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-west-2 # As defined in terraform/variables.tf

      # - name: Log in to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, Tag, and Push Image to ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: mlops-qa-bot-repository # As defined in terraform/variables.tf
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $ECR_REGISTRY/#ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY?#ECR_REPOSITORY:$IMAGE_TAG

      # - name: Set up Kubeconfig for EKS
      #   uses: aws-actions/amazon-eks-cluster#v1
      #   with:
      #     name: mlops-qa-bot-cluster # As defined int terraform/variables.tf

      # - name: Deploy to EKS
      #   run: |
      #     #update to a tool like kustomize or helm to update image tak dynamically
      #     kubectl apply -f k8s/qa-bot-deployment.yaml